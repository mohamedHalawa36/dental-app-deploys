var j=i=>{throw TypeError(i)};var y=(i,t,s)=>t.has(i)||j("Cannot "+s);var e=(i,t,s)=>(y(i,t,"read from private field"),s?s.call(i):t.get(i)),l=(i,t,s)=>t.has(i)?j("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),p=(i,t,s,a)=>(y(i,t,"write to private field"),a?a.call(i,s):t.set(i,s),s),h=(i,t,s)=>(y(i,t,"access private method"),s);import{R as U,H as q,n as z}from"./QueryClientProvider-CfP0eixq.js";var r,o,d,u,c,H,L=(H=class extends U{constructor(t){super();l(this,u);l(this,r);l(this,o);l(this,d);this.mutationId=t.mutationId,p(this,o,t.mutationCache),p(this,r,[]),this.state=t.state||B(),this.setOptions(t.options),this.scheduleGc()}setOptions(t){this.options=t,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(t){e(this,r).includes(t)||(e(this,r).push(t),this.clearGcTimeout(),e(this,o).notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){p(this,r,e(this,r).filter(s=>s!==t)),this.scheduleGc(),e(this,o).notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){e(this,r).length||(this.state.status==="pending"?this.scheduleGc():e(this,o).remove(this))}continue(){var t;return((t=e(this,d))==null?void 0:t.continue())??this.execute(this.state.variables)}async execute(t){var x,w,g,R,v,C,P,M,S,G,D,E,F,O,A,T,b,k,I,N;const s=()=>{h(this,u,c).call(this,{type:"continue"})};p(this,d,q({fn:()=>this.options.mutationFn?this.options.mutationFn(t):Promise.reject(new Error("No mutationFn found")),onFail:(n,f)=>{h(this,u,c).call(this,{type:"failed",failureCount:n,error:f})},onPause:()=>{h(this,u,c).call(this,{type:"pause"})},onContinue:s,retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>e(this,o).canRun(this)}));const a=this.state.status==="pending",m=!e(this,d).canStart();try{if(a)s();else{h(this,u,c).call(this,{type:"pending",variables:t,isPaused:m}),await((w=(x=e(this,o).config).onMutate)==null?void 0:w.call(x,t,this));const f=await((R=(g=this.options).onMutate)==null?void 0:R.call(g,t));f!==this.state.context&&h(this,u,c).call(this,{type:"pending",context:f,variables:t,isPaused:m})}const n=await e(this,d).start();return await((C=(v=e(this,o).config).onSuccess)==null?void 0:C.call(v,n,t,this.state.context,this)),await((M=(P=this.options).onSuccess)==null?void 0:M.call(P,n,t,this.state.context)),await((G=(S=e(this,o).config).onSettled)==null?void 0:G.call(S,n,null,this.state.variables,this.state.context,this)),await((E=(D=this.options).onSettled)==null?void 0:E.call(D,n,null,t,this.state.context)),h(this,u,c).call(this,{type:"success",data:n}),n}catch(n){try{throw await((O=(F=e(this,o).config).onError)==null?void 0:O.call(F,n,t,this.state.context,this)),await((T=(A=this.options).onError)==null?void 0:T.call(A,n,t,this.state.context)),await((k=(b=e(this,o).config).onSettled)==null?void 0:k.call(b,void 0,n,this.state.variables,this.state.context,this)),await((N=(I=this.options).onSettled)==null?void 0:N.call(I,void 0,n,t,this.state.context)),n}finally{h(this,u,c).call(this,{type:"error",error:n})}}finally{e(this,o).runNext(this)}}},r=new WeakMap,o=new WeakMap,d=new WeakMap,u=new WeakSet,c=function(t){const s=a=>{switch(t.type){case"failed":return{...a,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...a,isPaused:!0};case"continue":return{...a,isPaused:!1};case"pending":return{...a,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:t.isPaused,status:"pending",variables:t.variables,submittedAt:Date.now()};case"success":return{...a,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...a,data:void 0,error:t.error,failureCount:a.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"}}};this.state=s(this.state),z.batch(()=>{e(this,r).forEach(a=>{a.onMutationUpdate(t)}),e(this,o).notify({mutation:this,type:"updated",action:t})})},H);function B(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}export{L as M,B as g};
